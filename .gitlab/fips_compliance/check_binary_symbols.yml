---

# maybe do invoke tasks instead
.check_binary_symbols:
  stage: check_fips_compliance
  variables:
    SYMBOL: "_Cfunc_go_openssl"
    ARGS: ""
  rules:
    - when: always
      allow_failure: true
  script:
    - ls -l $OMNIBUS_PACKAGE_DIR/
    - ls -l $OMNIBUS_PACKAGE_DIR/$PACKAGE_NAME
    - tar -xvf data.tar.xz ./opt/datadog-agent/.debug/opt/datadog-agent/bin/agent/agent.dbg
    - inv -e fips.verify-binary-symbols --path ./opt/datadog-agent/.debug/opt/datadog-agent/bin/agent/agent.dbg --symbol $SYMBOL $ARGS

.check_binary_symbols-x64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  extends: .check_binary_symbols
  tags: ["arch:amd64"]
  before_script:
    - ar xv $OMNIBUS_PACKAGE_DIR/$PACKAGE_NAME

.check_binary_symbols-arm64:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  extends: .check_binary_symbols
  tags: ["arch:arm64"]
  before_script:
    - tar xvf $OMNIBUS_PACKAGE_DIR/$PACKAGE_NAME

check_binary_symbols_deb-x64:
  extends: .check_binary_symbols-x64
  variables:
    PACKAGE_NAME: "datadog-agent-dbg*amd64.deb"
  needs:
    - agent_deb-x64-a7

check_binary_symbols_deb-arm64:
  extends: .check_binary_symbols-arm64
  variables:
    PACKAGE_NAME: "datadog-agent-dbg*arm64.deb"
  needs:
    - agent_deb-arm64-a7

check_binary_symbols_rpm-x64:
  extends: .check_binary_symbols-x64
  variables:
    PACKAGE_NAME: "datadog-agent-dbg*x86_64.rpm"
  needs:
    - agent_rpm-x64-a7

check_binary_symbols_rpm-arm64:
  extends: .check_binary_symbols-arm64
  variables:
    PACKAGE_NAME: "datadog-agent-dbg*aarch64.rpm"
  needs:
    - agent_rpm-arm64-a7